services:
  
  db:
    build: ./data_stores/db
    container_name: operations_db
    restart: always
    environment: 
      POSTGRES_USER: unicorn_admin
      POSTGRES_PASSWORD: unicorn_password
      POSTGRES_DB: operations
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  flight_data_gen:
    build: ./data_providers/flight_generator
    container_name: flight_data_gen
    restart: "no"
    depends_on:
      - db
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}

  flight_status_data_gen:
    build: ./data_providers/flight_status_data_gen
    container_name: flight_status_data_gen
    restart: always
    depends_on:
      - flight_data_gen
    volumes:
      - shared_data:/shared_data
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}

  flight_status_data_extract:
    build: ./data_pipelines/flight_status_data_extract
    container_name: flight_status_data_extract
    restart: always
    depends_on:
      - flight_status_data_gen
    volumes:
      - shared_data:/shared_data
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}

  booking_data_gen:
    build: ./data_providers/flight_booking_mock
    container_name: booking_data_gen
    restart: "no"
    depends_on:
      - flight_data_gen
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      
  flight_status_api:
    build: ./apis/flight_status_api
    container_name: flight_status_api
    ports:
      - "8000:8000"
    depends_on:
      - flight_status_data_extract
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}

  internal_dashboard:
    build:
      context: ./dashboards/internal_dashboard
    container_name: internal_dashboard
    ports:
      - "8501:8501"
    depends_on:
      - flight_status_api
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}

  airport_dashboard:
    build:
      context: ./dashboards/airport_dashboard
    container_name: airport_dashboard
    ports:
      - "8502:8502"
    depends_on:
      - flight_status_data_extract

  customer_notifier:
    build: ./services/customer_notifier
    container_name: customer_notifier
    restart: always
    depends_on:
      - db
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}

volumes:
  postgres_data:
  shared_data: